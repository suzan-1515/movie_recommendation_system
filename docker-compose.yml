version: '3.8'

services:
    dev:
      container_name: movie_rs_api_dev
      image: movie_rs_api-dev:1.0.0
      build:
          context: .
          target: development
          dockerfile: ./Dockerfile
      command: npm run start:debug
      ports:
          - 3000:3000
          - 9229:9229
      links:
        - mysql
        # - redis
      networks:
          - movie-rs-network
      volumes:
          - .:/usr/src/app
          - /usr/src/app/node_modules
      depends_on:
          # - redis
          - mysql
      env_file:
          - .env
      restart: always
    prod:
      container_name: movie_rs_api_prod
      image: movie_rs_api-prod:1.0.0
      build:
          context: .
          target: production
          dockerfile: ./Dockerfile
      command: npm run start:prod
      ports:
          - 3000:3000
          - 9229:9229
      networks:
          - movie-rs-network
      volumes:
          - .:/usr/src/app
          - /usr/src/app/node_modules
      links:
        - mysql
        # - redis
      depends_on:
          # - redis
          - mysql
      env_file:
          - .env
      restart: unless-stopped
    
    # redis:
    #   container_name: redis
    #   image: redis:5
    #   networks:
    #     - movie-rs-network
    #   volumes:
    #   - movie_rs_redis_data:/data
    mysql:
      container_name: mysql
      restart: always
      image: mysql:5.7
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=movie_rs
        - MYSQL_PASSWORD=movie_rs
        - MYSQL_DATABASE=movie_rs
      ports:
      - "3308:3306"
      volumes:
      - movie_rs_mysql_data:/var/lib/mysql

networks:
  movie-rs-network:
volumes:
  movie_rs_mysql_data:
  # movie_rs_redis_data:
  # redis:
  #   driver: local